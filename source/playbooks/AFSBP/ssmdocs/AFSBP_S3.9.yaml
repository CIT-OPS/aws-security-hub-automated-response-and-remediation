description: |
  ### Document Name - SHARR-AFSBP_1.0.0_S3.9

  ## What does this document do?
  This document ensures that S3 bucket server access logging is enabled.  If a bucket in the account/region named "cnxc-s3-server-access-logging-<accountId>-<region>" doesnt exist already, then it will be created on your behalf with the proper permissions for the aws s3 logging

  ## Input Parameters
  * Finding: (Required) Security Hub finding details JSON
  * AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.

  ## Output Parameters
  * Remediation.Output

  ## Documentation Links
  * [AFSBP v1.0.0 S3.9](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html#fsbp-s3-9)
schemaVersion: '0.3'
assumeRole: '{{ AutomationAssumeRole }}'
outputs:
  - ParseInput.Resource
  - Remediation.remediationOutputMessage
  - Remediation.remediationOutputStatus
parameters:
  Finding:
    type: StringMap
    description: The input from Step function for finding
  AutomationAssumeRole:
    type: String
    description: (Optional) The ARN of the role that allows Automation to perform the actions on your behalf.
    default: ''
    allowedPattern: '^arn:(?:aws|aws-us-gov|aws-cn):iam::\d{12}:role/[\w+=,.@-]+'
mainSteps:
  - name: ParseInput
    action: 'aws:executeScript'
    outputs:
      - Name: AccountId
        Selector: $.Payload.account_id
        Type: String
      - Name: Region
        Selector: $.Payload.resource_region
        Type: String
      - Name: FindingId
        Selector: $.Payload.finding_id
        Type: String
      - Name: ProductArn
        Selector: $.Payload.product_arn
        Type: String
      - Name: Resource
        Selector: $.Payload.resource
        Type: StringMap
      - Name: ResourceId
        Selector: $.Payload.resource.Id
        Type: String
      - Name: FindingRegion
        Selector: $.Payload.finding.Region
        Type: String
    inputs:
      InputPayload:
        Finding: '{{Finding}}'
        parse_id_pattern: ''
        expected_control_id:
          - S3.9
      Runtime: python3.8
      Handler: parse_event
      Script: |-
        %%SCRIPT=common/parse_input.py%%
    isEnd: false
  - name: SkipLoggingBucket
    action: 'aws:branch'
    inputs:
      Choices:
        - NextStep: SuppressFinding
          Variable: '{{ParseInput.ResourceId}}'
          StringEquals: 'arn:aws:s3:::cnxc-s3-server-access-logging-{{global:ACCOUNT_ID}}-{{ParseInput.FindingRegion}}'
    nextStep: Remediation
  - name: Remediation
    action: 'aws:executeAutomation'
    isEnd: false
    inputs:
      DocumentName: SHARR-ConfigureS3ServerAccessLogging
      RuntimeParameters:
        AutomationAssumeRole: 'arn:{{global:AWS_PARTITION}}:iam::{{global:ACCOUNT_ID}}:role/SO0111-ConfigureS3ServerAccessLogging'
        Resource: '{{ParseInput.Resource}}'
        Finding: '{{Finding}}'
    outputs:
      - Name: remediationOutputMessage
        Selector: $.Payload.RemediationResultStatus
        Type: String
      - Name: remediationOutputStatus
        Selector: $.Payload.RemediationResultMessage
        Type: String
  - name: UpdateFinding
    action: 'aws:executeAwsApi'
    inputs:
      Service: securityhub
      Api: BatchUpdateFindings
      FindingIdentifiers:
        - Id: '{{ParseInput.FindingId}}'
          ProductArn: '{{ParseInput.ProductArn}}'
      Note:
        Text: Configured Server Access Logging
        UpdatedBy: SHARR-AFSBP_1.0.0_S3.9-CNXC
      Workflow:
        Status: RESOLVED
    description: Update finding
    isEnd: true
  - name: SuppressFinding
    action: 'aws:executeAwsApi'
    inputs:
      Service: securityhub
      Api: BatchUpdateFindings
      FindingIdentifiers:
        - Id: '{{ParseInput.FindingId}}'
          ProductArn: '{{ParseInput.ProductArn}}'
      Note:
        Text: Bucket Exempt From Server Access Logging
        UpdatedBy: SHARR-AFSBP_1.0.0_S3.9-CNXC
      Workflow:
        Status: SUPPRESSED
    isEnd: true
